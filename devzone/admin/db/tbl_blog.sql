-- phpMyAdmin SQL Dump
-- version 5.1.1
-- https://www.phpmyadmin.net/
--
-- Máy chủ: 127.0.0.1
-- Thời gian đã tạo: Th10 26, 2021 lúc 04:46 PM
-- Phiên bản máy phục vụ: 10.4.21-MariaDB
-- Phiên bản PHP: 7.3.30

SET SQL_MODE = "NO_AUTO_VALUE_ON_ZERO";
START TRANSACTION;
SET time_zone = "+00:00";


/*!40101 SET @OLD_CHARACTER_SET_CLIENT=@@CHARACTER_SET_CLIENT */;
/*!40101 SET @OLD_CHARACTER_SET_RESULTS=@@CHARACTER_SET_RESULTS */;
/*!40101 SET @OLD_COLLATION_CONNECTION=@@COLLATION_CONNECTION */;
/*!40101 SET NAMES utf8mb4 */;

--
-- Cơ sở dữ liệu: `devzone`
--

-- --------------------------------------------------------

--
-- Cấu trúc bảng cho bảng `tbl_blog`
--

CREATE TABLE `tbl_blog` (
  `blog_id` int(11) NOT NULL,
  `tieu_de` varchar(500) COLLATE utf8_unicode_ci NOT NULL,
  `mo_ta` varchar(500) COLLATE utf8_unicode_ci NOT NULL,
  `noi_dung` text COLLATE utf8_unicode_ci NOT NULL,
  `hinh_anh` varchar(500) COLLATE utf8_unicode_ci DEFAULT NULL,
  `nguoi_viet` varchar(50) COLLATE utf8_unicode_ci NOT NULL,
  `ngay_dang` timestamp NOT NULL DEFAULT current_timestamp() ON UPDATE current_timestamp(),
  `so_lan_doc` int(11) NOT NULL DEFAULT 0
) ENGINE=InnoDB DEFAULT CHARSET=utf8 COLLATE=utf8_unicode_ci;

--
-- Đang đổ dữ liệu cho bảng `tbl_blog`
--

INSERT INTO `tbl_blog` (`blog_id`, `tieu_de`, `mo_ta`, `noi_dung`, `hinh_anh`, `nguoi_viet`, `ngay_dang`, `so_lan_doc`) VALUES
(1, 'CHỌN NGÔN NGỮ LẬP TRÌNH NÀO ĐỂ THEO???', 'Hôm nay, DevZone sẽ phân tích tổng quát về đặc điểm của các ngôn ngữ lập trình phổ biến hiện nay phù hợp với từng lĩnh vực, mục đích, giúp các bạn có chút định hướng cho bản thân để không bị lệch lạc, hiểu nhầm về việc chọn ngôn ngữ lập trình để học, để làm!', '<p>&emsp;&emsp;Hôm nay, DevZone sẽ phân tích tổng quát về đặc điểm của các ngôn ngữ lập trình phổ biến hiện nay phù hợp với từng lĩnh vực, mục đích, giúp các bạn có chút định hướng cho bản thân để không bị lệch lạc, hiểu nhầm về việc chọn ngôn ngữ lập trình để học, để làm!</p>\r\n<br>1) C/C++\r\n<p>&emsp;Đây hẳn là ngôn ngữ không còn xa lạ gì với các bạn sinh viên, hay thậm chí học sinh. C/C++ nổi bật là ngôn ngữ dễ học, nhưng khó để master, khá phù hợp với người mới tiếp xúc với lập trình, bởi các câu lệnh trong chương trình chạy tuần tự, dễ đọc, dễ phân tích.</p>\r\n<p>Ưu điểm lớn nhất của bộ đôi ngôn ngữ này là hiệu năng cao của nó (nhanh nhất so với các ngôn ngữ lập trình bậc cao hiện nay) nhờ vào sự gần gũi với phần cứng. Cũng vì vậy mà nó được ứng dụng rất nhiều trong lĩnh vực lập trình nhúng, hệ điều hành, các hệ thống cần xử lý nhanh. Ngoài ra C++ còn rất phổ biến trong các lĩnh vực xử lý ảnh (OpenCV), game(cocos2dx) và đồ họa (openGL).\r\nĐiểm khó khăn khi học C/C++ chắc chắn là phần con trỏ. Nó vừa là nét đặc trưng nhất của C/C++ nhưng cũng mang lại những rắc rối khá “khoai” bởi nó được “cấp quyền\" quá mạnh để tác động vào phần cứng. Nhưng yên tâm đi, khi đã thành thạo con trỏ, thì bạn cũng nắm được những tinh hoa của anh em nhà C/C++ này rồi đấy!</p>\r\n<p>Đánh giá độ dễ học: 4/5.</p>\r\n<br>2) Python\r\n<p>&emsp;Vài năm trở lại đây, Python đang trở nên rất nóng trong lĩnh vực lập trình. Lý do chính khiến nó trở nên mạnh mẽ như vậy có thể kể đến tính dễ học, dễ hiểu của nó, cùng với những nguồn thư viện khổng lồ, và chúng không ngừng được update.</p>\r\n<p>Note: Python bản chất không nhanh và ứng dụng được nhiều, cái ứng dụng của nó nhờ vào thư viện rất lớn, đặc biệt về các thư viện liên quan đến xử lý số liệu, data, toán học,.... Vì vậy python được sử dụng phổ biến trong lĩnh vực Machine learning (học máy), AI (trí tuệ nhân tạo), Big Data,... Ngoài ra, các framework như Django, Flask,... hỗ trợ làm hệ thống web cũng rất ổn.</p>\r\n<p>Đánh giá độ dễ học: 5/5.</p>\r\n<br>3) Java\r\n<p>&emsp;Một ngôn ngữ từng dẫn đầu trong khoảng thời gian dài trong vài năm về trước. Java là một ngôn ngữ thuần hướng đối tượng vô cùng chặt chẽ. Java đáng sử dụng nhất bởi đặc điểm “Write once, Run anywhere” của nó, tức là viết 1 lần, chạy mọi nơi, nhờ vào việc chạy trên nền JVM (Java Virtual Machine) (có thể hiểu là các phần mềm java chạy trên phần mềm JVM chứ không chạy trực tiếp trên hệ điều hành (OS) chính). Java là một lựa chọn tuyệt vời cho những ai muốn bắt đầu với OOP (lập trình hướng đối tượng) bởi java có thể coi là ngôn ngữ hướng đối tượng “chuẩn” nhất.</p>\r\n<p>Java nổi tiếng trong các lĩnh vực như lập trình Backend (dù vài năm gần đây đang kém dần, hầu như Java web chỉ tồn tại trong các hệ thống cũ), và lập trình app Desktop (Swing, FX), và đặc biệt là làm Native App trên Android.</p>\r\n<p>Điểm yếu của Java có thể kể đến như thư viện hỗ trợ khá ít, các câu lệnh dài dòng, khó hiểu cho người mới bắt đầu, hay tốc độ thực thi chương trình không nhanh (do chạy trên nền JVM).</p>\r\n<p>Đánh giá độ dễ học: 3/5.</p>\r\n<br>4) C#\r\n<p>&emsp;Là một người em sinh sau C++ và Java, C# kế thừa và được phát triển dựa trên cặp đôi huyền thoại này với tính hướng đối tượng vô cùng mạnh mẽ. Vậy nên những ai đã từng học qua C++, Java thì việc tiếp xúc với các cú pháp, luồng chạy của ngôn ngữ này khá dễ dàng.</p>\r\n<p>Lí do gì khiến C# đang là ngôn ngữ đang phát triển mạnh trong thời gian gần đây? C# bản chất chỉ là một ngôn ngữ lập trình, nhưng cái ta cần quan tâm tới là framework .NET (dot net) và nổi lên gần đây còn có .NET core, được phát triển bởi cha đẻ của Windows, Microsoft. Những nền tảng này được hỗ trợ “tận răng” bởi Microsoft, khiến chúng đang rất được ưa chuộng trong các dự án lớn.</p>\r\n<p>Học C# có thể làm được App Desktop, các app như Photoshop, Skype, Office,... được viết bằng C# chẳng hạn. Một vài năm trước, nói đến làm app desktop đơn giản, người ta nghĩ ngay tới Winform, hỗ trợ kéo thả trên Visual Studio =)) bởi tính đơn giản, hiệu quả của nó mang lại (dù vài năm gần đây nó đang xuống rồi) nhưng những App Desktop được viết bằng C# có nhược điểm cố hữu: đó là… chỉ chạy trên Windows :<.</p>\r\n<p>Bên cạnh đó, C# cũng hỗ trợ phát triển game vô cùng tốt, chúng ta có thể kể đến engine Unity để làm game 3D vô cùng nổi tiếng.</p>\r\n<p>Ngoài ra, nổi bật nhất vẫn là về Web App và Cloud. Các framework .NET, .NET core không những chỉ mạnh mẽ, mà bên cạnh đó, Microsoft cũng ra vô số công cụ, công nghệ khác hỗ trợ cho nền tảng này. Đơn giản nhất là đứa con cưng “Visual Studio” nặng nhưng khỏe, hay các dịch vụ đám mây như Azure, Database như MSSQL.</p>\r\n<p>Đánh giá độ dễ học: 3/5 (cho người mới bắt đầu).</p>\r\n<br>5) Javascript\r\n<p>&emsp;Như mình đã nói trên, ở khoảng vài năm trước, Java là một ngôn ngữ vô cùng phổ biến, người người học java, nhà nhà học jav… A. Vậy Javascript có liên quan gì đến Java không? Câu trả lời là không, còn cái tên của nó vì sao có chữ Java thì theo mình đọc đâu đó, do Java quá nổi, nên nhà phát triển đặt tên để ăn theo (còn gọi là bú fame ấy =))), nhằm dự định thay thế sự thống trị của Java, nhưng cuối cùng mục đích của 2 ngôn ngữ mang lại lại vô cùng khác nhau.</p>\r\n<p>Nhắc đến làm Web cơ bản nhất, ta sẽ nghĩ luôn đến bộ ba HTML, CSS và JS (Javascript). Hiện nay, một số người còn có phát ngôn như: “Bây giờ không biết JS thì coi là lỗi thời”, ý kiến này không hẳn là đúng, mà cũng chưa chắc đã sai. Bởi JS giờ đang phát triển vô cùng vượt trội, hỗ trợ làm rất nhiều thứ, từ Web có frontend và cả server, từ app Desktop đa nền tảng (Cross Platform), cho tới App Mobile (cũng đa nền tảng luôn ._.), hay thậm chí là cả làm game với một số framework, engine hỗ trợ.</p>\r\n<p>Vậy ưu điểm của nó là gì? JS có đặc điểm mà hầu hết các ngôn ngữ khác không có, đó là chạy trực tiếp trên trình duyệt Web. JS khá dễ học, nhưng cũng khó để hiểu sâu. Và như mình nói ở trên, JS có rất nhiều framework, libraries, hỗ trợ giảm thời gian code, => học only Js, do everything =)). Với frontend ta có Angular, React, Vue. Với backend ta có Nodejs, Electron với app Desktop với Mobile App thì có React Native,.... Bên cạnh đó, các framework, thư viện này được phát triển vô cùng nhanh bởi số lượng lập trình viên trên thế giới đang quan tâm và sử dụng Js vô cùng nhiều.\r\nƯu điểm nhiều như vậy, tất nhiên học và theo JS cũng có không ít khó khăn. Mới học JS, chả hiểu các dòng code chạy kiểu gì mà dòng 3 thực hiện trước dòng 2 .-.?? Đó là do JS là ngôn ngữ bất đồng bộ, nó hướng theo event. Đó là điểm đặc biệt của Js, nhưng cũng mang lại sự nhức đầu cho người mới học. Ngoài ra, lượng framework, libraries của JS quá nhiều, cũng tức là chúng ta sẽ dễ bị lỗi thời nếu không update kiến thức, công nghệ thường xuyên.</p>\r\n<p>Học JS ngay từ hôm nay thôi nào =)).</p>\r\nĐánh giá độ khó: 3/5.\r\n', 'blog1.png', 'By Admin', '2021-10-25 06:48:23', 0),
(2, 'GIT – THỨ MÀ LẬP TRÌNH VIÊN NÀO CŨNG CẦN BIẾT', 'Khi lập trình, sẽ có lúc bạn lỡ tay xóa một đoạn code vì nghĩ rằng đoạn code đó không phù hợp nữa, nhưng sau đó lại phát hiện ra đoạn code đó bạn vẫn cần dùng. Bạn nghĩ mình có thể nhớ lại chính xác những gì mình đã viết không? Thật sự rất khó. Nhưng nếu bạn có dùng phần mềm quản lý phiên bản mã nguồn thì mọi việc sẽ trở nên đơn giản hơn nhiều.', '<p>&emsp;Trong lúc lập trình và bạn vô tình xóa đi một đoạn code mà bạn vẫn cần dùng nhưng lại không biết cách khôi phục lại đoạn code đã mất. Tuy nhiên, với những lập trình viên sử dụng phần mềm quản lý phiên bản phân tán Git thì điều này sẽ lại rất dễ dàng. Vậy, Git là gì và lợi ích mà Git mang lại cho lập trình viên là gì? Theo dõi bài viết mà DevZone chia sẻ dưới đây để tìm ra đáp án cho những câu hỏi này nhé!</p>\r\n<br> Git là gì?\r\n<p>Git là một hệ thống quản lý phiên bản phân tán (distributed version control system). Nhờ Git, việc quản lý code và làm việc nhóm của developer trở nên đơn giản và thuận tiện hơn.</p>\r\n<p> Lợi ích lớn nhất. của việc dùng Git là gì ?</p>\r\n<p>- Sắp xếp công việc một cách tốt hơn: Ta tập trung giải quyết từng task, mà không cần quá bận tâm đến các task xung quanh.</p>\r\n<p>- Linh hoạt hơn khi làm cũng lúc nhiều task: Ta dễ dàng hơn trong việc chia task cho các thành viên, quản lý công việc từng người hiệu quả hơn vì ta có thể cấu trúc công việc dễ dàng hơn.</p>\r\n<p>- Tự tin để thử nghiệm những ý tưởng mới, test những chức năng mới: Vì ta có thể tách biệt từng phiên bản cho dự án của mình, vẫn giữ được những code cũ, điều này giúp nâng cao chất lượng code cũng như tính sáng tạo.</p>\r\n<br><p> Còn gì nữa nhỉ???</p>\r\n<br><p>Trong thực tế làm việc thì các nhà phát triển thường thực hiện song song các dự án. Để tránh sự xung đột giữa các mã giữa các nhà phát triển ta cần một hệ thống kiểm soát. Để làm được điều này hầu hết các nhà phát triển chọn Git là hệ thống kiểm soát các mã để tránh sự xung đột các mã của nhà phát triển.</p>\r\n<p>Bên cạnh đó, các yêu cầu trong các dự án thường xuyên được thay đổi. Có những khi bạn đã xóa một đoạn code nhưng lúc sau phát hiện ra đoạn code đó vẫn cần dùng. Thế nên cần có một kiểm soát để nhà phát triển có thể quay lại phiên bản cũ của mã. Chính vì vậy Git là một trong những lựa chọn để sử dụng. Vì Git giúp người dùng lưu lại những phiên bản của những lần thay đổi mã nguồn.</p>\r\n<p>Hầu như các hệ thống quản lý phiên bản tập trung tất cả mã nguồn và lịch sử thay đổi ở một chỗ máy chủ, thì với Git nó lại là một hệ thống quản lý phiên bản phân tán. Điều này giúp ích nhiều trong khi các dự án đang được chạy song song liên quan đến cùng một cơ sở mã.</p>\r\n<p> Trong bài sau DevZone sẽ hướng dẫn tải Git và sử dụng Git như nào cho hiệu quả nhé…</p>\r\n', 'blog2.jpg', 'By Admin', '2021-10-25 07:35:54', 0),
(3, 'KỸ NĂNG ĐỂ TRỞ THÀNH MỘT WEB DEVELOPER', 'Học lập trình web hay cũng như học bất cứ ngôn ngữ nào như Java, Python,… cũng cần có một lộ trình rõ ràng. Nếu bạn đi sai ngay từ đầu cũng có thể để quay lại mất không ít thời gian.\r\nĐã bao giờ bạn lướt qua một trang web và thấy phấn kích vì các hiệu ứng đẹp đẽ, giao diện bắt mắt và tính năng hữu ích chưa, bạn cũng đã bao giờ nghĩ mình sẽ muốn làm ra một trang web như vậy cho chính mình. ', '<p>Những Skill bạn bạn đã thực sự biết.</p>\r\n<p>Học lập trình web hay cũng như học bất cứ ngôn ngữ nào như Java, Python,… cũng cần có một lộ trình rõ ràng. Nếu bạn đi sai ngay từ đầu cũng có thể để quay lại mất không ít thời gian.</p>\r\n<p>Đã bao giờ bạn lướt qua một trang web và thấy phấn kích vì các hiệu ứng đẹp đẽ, giao diện bắt mắt và tính năng hữu ích chưa, bạn cũng đã bao giờ nghĩ mình sẽ muốn làm ra một trang web như vậy cho chính mình. Việc để tạo ra một trang web như vậy thì ngoài phải học những ngôn ngữ lập trình cơ bản thì bạn phải biết và học thêm những thứ khác như devtools, format, api, authentication và nhiều thứ hơn thế nữa để bạn có thể phát triển nhanh chóng hơn trong lập trình. Ta sẽ cùng điểm qua những thứ thiết yếu và chúng ta nên biết để trở thành một Web Developer nhé.</p>\r\n<br><p> 1) HTML/CSS/JS</p>\r\n<p>Kĩ năng lập trình hay kiến thức lập trình chính là thứ quan trọng mà ta nên chọn học đầu tiên, với web thì có 3 thứ mà chúng ta nên học đầu tiên là HTML, CSS và Javascript. Bạn sẽ sử dụng HTML và CSS cho các giao diện web.</p>\r\n<p>Chỉ cần nhấp chuột phải vào trình duyệt web của bạn và sau đó chọn view page source. Bạn sẽ tìm thấy cấu trúc trang web của mình, nơi có rất nhiều thẻ HTML được sử dụng cho các mục đích khác nhau. CSS cũng được sử dụng trong frontend quyết định styles mà bạn đã chọn, thiết kế, bố cục và cách các yếu tố HTML cần được hiển thị trên màn hình. Javascript hiện đang có nhu cầu cao và về cơ bản, nó chịu trách nhiệm làm cho các trang HTML của bạn trở nên năng động và tương tác</p>\r\n<p>Bạn cứ tưởng tượng HTML chính là khung xương, CSS là da thịt khiến hình hài bạn trở nên rõ nét, đẹp đẽ và JS chính là những hành động, thao tác khiến bạn trở nên sinh động.</p>\r\n<br><p>2)  Browser DevTools</p>\r\n<p>Bạn có thể thực hiện nhiều công cụ bằng DevTools của trình duyệt như gỡ lỗi, chỉnh sửa các thành phần HTML, chỉnh sửa các thuộc tính CSS, kiểm tra thiết bị, theo dõi lỗi javascript, v.v ... Mỗi nhà phát triển nên lưu ý sử dụng các tab khác nhau (elements, console, network, etc...) trong DevTools để làm cho công việc của họ dễ dàng hơn và nhanh hơn.</p>\r\n<p>Bạn có thể chính sửa trực tiếp các file của mình, hay xem source code của mình, và có thể xem cả các gói tin request đến và đi. Thật sự hữu ích.</p>\r\n<br><p>3) Git và Github</p>\r\n<p>Git là một trong những hệ control systems phiên bản phổ biến nhất được sử dụng trong hầu hết các tổ chức. Nếu bạn muốn được tuyển dụng trong những công ty lập trình lớn hơn thì cơ hội sẽ cao hơn nếu mà bạn biết về git và github. Đây là lý do bạn chắc chắn nên dành thời gian học Git và một số lệnh cơ bản như cloning, pushing to repositories, making a pull request, merging branches.v.v. Github là một trang mà không thể bạn không biết đó là nơi bạn có thể lưu trữ những code của mình. Ngoài ra, github cũng chính là nơi mà bạn và nhóm của bạn or một công ty có thể quản lý code của mình và mọi người trên cùng một dự án.</p>\r\n<br><p>4) API</p>\r\n<p>Trong phát triển web, bạn sẽ làm việc rất nhiều với các API về cơ bản là xử lý dữ liệu của bên thứ ba.Và cũng thật tuyệt khi bạn tách riêng phần xử lý và giao diện ra, FrontEnd chỉ cần quan tâm gọi api mà không cần quá quan tâm Backend đã xử lý như thế nào, cần biết đầu vào và đầu ra.</p>\r\n<p>Mình khuyên bạn nên tìm hiểu về cách sử dụng rest API, những phương thức yêu cầu HTTP (GET, POST, PUT, PATCH và DELETE), xây dựng một rest API, hoàn thiện các thao tác CRUD (GET, POST, PUT, PATCH and DELETE). Và sau cùng đó là tìm hiểu các status code trả về, và các định dạng khác nhau (XML, JSON, HTML) khi bạn sử dụng một API bất kỳ có thể return về cho bạn</p>\r\n<br><p>5) Authentication</p>\r\n<p>Việc bạn làm việc với rest Api thì bạn phải quan tâm đến việc Authentication này. Điều này rất quan trọng bởi nếu bạn làm không được bảo mật thì đó sẽ là một thảm hoạ cho công việc của bạn hay của công ty bạn. Ví dụ: cho phép người dùng đăng nhập, đăng xuất hoặc tạo một số tài nguyên từ tài khoản cá nhân của họ, người dùng nào đã tạo tài nguyên đó hoặc chặn một số trang cho những người dùng chưa đăng nhập. Người dùng bảo mật tài khoản của người dùng phụ thuộc rất nhiều vào xác thực.</p>\r\n<p>Có rất nhiều cách để thực hiện xác thực cho người dùng và nó phụ thuộc vào ngôn ngữ lập trình hoặc công nghệ bạn đang sử dụng. Nếu bạn đang sử dụng React trên frontend và Node với Express trong phần phụ trợ hơn bạn có thể sử dụng JWT (JSON Web Tokens) để xác thực. Vì vậy, có nhiều cách để làm việc với xác thực nhưng nó là một khái niệm quan trọng trong phát triển web để tìm hiểu và thực hiện.</p>\r\n<br><p>6) Ngôn ngữ lập trình</p>\r\n<p>Đương nhiên là hệ thống máy tính không hiểu ngôn ngữ của con người và đó là lý do bạn cần nói chuyện với hệ thống của mình với các ngôn ngữ lập trình. Trong phát triển web, ngôn ngữ lập trình là bắt buộc để học và tất cả các logic bạn có thể áp dụng bằng nhiều ngôn ngữ lập trình. Các nhà phát triển web sử dụng nhiều ngôn ngữ như PHP, Python, Java, Ruby và gần đây Javascript cũng tạo ra sự cạnh tranh tự giới thiệu để xử lý phần phụ trợ. Như một trang web Nhà phát triển, bạn phải có kiến thức về ít nhất một ngôn ngữ lập trình để xây dựng ứng dụng web của mình.</p>\r\n<br><p>7) Giải quyết vấn đề và tìm kiếm vấn đề.</p>\r\n<p>Nếu bạn muốn trở thành một nhà phát triển web, bạn nên có một số kỹ năng tìm kiếm và giải quyết vấn đề tự nhiên. Kỹ năng giải quyết vấn đề và tìm kiếm có thể được xây dựng thông qua một số dự án, thông qua các cấu trúc dữ liệu và thuật toán, giải quyết một số thách thức, câu đố và những thứ tương tự nhưng bạn cần tiếp tục thực hành bất cứ điều gì bạn chọn</p>\r\n<br><p>8) Devops và deployment</p>\r\n<p>Cuối cùng nhưng không kém phần quan trọng, là một nhà phát triển web, bạn nên có kiến thức về maintenance, scaling, migrating and deploying code của mình trên các nền tảng khác nhau như cloud, AWS, Heroku, Netlify, v.v ... Có rất nhiều lựa chọn để dành thời gian tìm hiểu về các nền tảng này, cách các dịch vụ này hoạt động và cách triển khai hoặc duy trì mã của bạn trên các nền tảng này.</p>\r\n', 'blog4.png', 'By Admin', '2021-10-25 07:49:18', 0),
(4, 'BẠN CẦN NHỮNG KIẾN THỨC GÌ ĐỂ CÓ THỂ TRỞ THÀNH MỘT KỸ SƯ LẬP TRÌNH NHÚNG?', 'Trước tiên ta cần biết một hệ thống nhúng thường bao gồm những phần sau:\r\n Cảm biến tương tự để thu thập dữ liệu thời gian thực (nhiệt độ, áp suất, gia tốc, v.v.)\r\n Bộ vi điều khiển, bộ vi xử lý để ra quyết định, tự động hóa và điều khiển.\r\n Phần mềm nhúng: phần mềm được viết cho các hệ thống nhúng được gọi là firmware và được lưu trữ trong các chip bộ nhớ ROM hoặc bộ nhớ flash.\r\n\r\n', '<p>Trước tiên ta cần biết một hệ thống nhúng thường bao gồm những phần sau:</p>\r\n <p>- Cảm biến tương tự để thu thập dữ liệu thời gian thực (nhiệt độ, áp suất, gia tốc, v.v.)</p>\r\n<p>- Bộ vi điều khiển, bộ vi xử lý để ra quyết định, tự động hóa và điều khiển.</p>\r\n<p>- Phần mềm nhúng: phần mềm được viết cho các hệ thống nhúng được gọi là firmware và được lưu trữ trong các chip bộ nhớ ROM hoặc bộ nhớ flash.</p>\r\n<p>- Kỹ sư hệ thống nhúng chịu trách nhiệm thiết kế, phát triển, sản xuất, kiểm tra và bảo trì các hệ thống nhúng.</p>\r\n<br><p>Bạn cần học những gì để trở thành một kỹ sư lập trình nhúng?</p>\r\n<p>Một kỹ sư hệ thống nhúng đòi hỏi phải có kinh nghiệm với cả phần cứng và phần mềm. Để trở thành một kỹ sư lập trình nhúng bạn cần những kiến thức cốt lõi như sau:</p>\r\n<p>- Các ngôn ngữ lập trình như C, C ++, đặc biệt là với C vì đây là ngôn ngữ quan trọng bậc nhất trong lập trình nhúng. Tùy thuộc vào vị trí công việc, bạn cũng có thể phải làm quen với các ngôn ngữ khác như ADA, Lua, Rust, Python, VHDL và Verilog.</p>\r\n<p>- Các dòng vi điều khiển, vi xử lý như Arduino, Atmel AVR, ESP32, PIC, ARM, NRF…</p>\r\n<p>- Các loại giao tiếp: UART, I2C, SPI, RS485,… (nâng cao: SATA, PCIE, USB, CAN, MOST).</p>\r\n<p>- Hệ điều hành: kiến trúc hệ điều hành, kiến trúc máy tính, nhất là hệ điều hành linux.</p>\r\n<p>- Quản lý bộ nhớ: hiểu rõ về các loại bộ nhớ khác nhau, bao gồm RAM, ROM và Flash, và cách phát triển phần mềm.</p>\r\n<p>- Thiết kế mạch: PCB, phân tích tín hiệu, gỡ lỗi, lắp ráp và kiểm tra mạch tích hợp và các thành phần của chúng.</p>\r\n<p>- Đo lường: Có kinh nghiệm sử dụng đồng hồ vạn năng kỹ thuật số, máy hiện sóng và các thiết bị khác để đo lường, phân tích và khắc phục sự cố hệ thống điện.</p>\r\n<br><p>Ngay cả khi một kỹ sư hệ thống nhúng không bao giờ phải trực tiếp chạm vào phần cứng của hệ thống mà họ thiết kế, thì cần phải có kiến ​​thức sâu sắc về các hệ thống phần cứng đó để thiết kế phần mềm nhúng đúng cách.</p>\r\n<p>Hi vọng các bạn sẽ cố gắng tìm hiểu và học tập những kiến thức quan trọng để trở thành một kỹ sư tài năng!!!</p>\r\n<p>Nguồn: Sưu tầm và chọn lọc</p>\r\n', 'blog3.jpg', 'By Admin', '2021-10-25 07:50:10', 0);

--
-- Chỉ mục cho các bảng đã đổ
--

--
-- Chỉ mục cho bảng `tbl_blog`
--
ALTER TABLE `tbl_blog`
  ADD PRIMARY KEY (`blog_id`);

--
-- AUTO_INCREMENT cho các bảng đã đổ
--

--
-- AUTO_INCREMENT cho bảng `tbl_blog`
--
ALTER TABLE `tbl_blog`
  MODIFY `blog_id` int(11) NOT NULL AUTO_INCREMENT, AUTO_INCREMENT=5;
COMMIT;

/*!40101 SET CHARACTER_SET_CLIENT=@OLD_CHARACTER_SET_CLIENT */;
/*!40101 SET CHARACTER_SET_RESULTS=@OLD_CHARACTER_SET_RESULTS */;
/*!40101 SET COLLATION_CONNECTION=@OLD_COLLATION_CONNECTION */;
